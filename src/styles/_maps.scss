// C. Maps

// C.1. Colors
$colors: (
  "gray": (
    50: #fafafa,
    100: #f5f5f5,
    200: #ededed,
    300: #e0e0e0,
    400: #bdbdbd,
    500: #9e9e9e,
    600: #757575,
    700: #616161,
    800: #424242,
    900: #212121,
  ),
  "red": (
    50: #ffebee,
    100: #ffccd1,
    200: #ef9a9a,
    300: #e57171,
    400: #ef5552,
    500: #f44034,
    600: #e53734,
    700: #d33131,
    800: #c72929,
    900: #b51c1c,
  ),
  "pink": (
    50: #fce3ec,
    100: #f8bacf,
    200: #f490b1,
    300: #f06090,
    400: #ec417a,
    500: #e92063,
    600: #da1b61,
    700: #c3185d,
    800: #ad1457,
    900: #860e4e,
  ),
  "purple": (
    50: #f3e5f5,
    100: #e2c0e8,
    200: #cd92d8,
    300: #bb69c9,
    400: #ab47bd,
    500: #9b27b0,
    600: #8c24a8,
    700: #7b1fa3,
    800: #681b98,
    900: #49148a,
  ),
  "deep-purple": (
    50: #ede7f6,
    100: #d1c4e9,
    200: #b39ddb,
    300: #9575cd,
    400: #7e57c2,
    500: #673ab7,
    600: #5e35b1,
    700: #512da8,
    800: #4527a0,
    900: #311b92,
  ),
  "indigo": (
    50: #e8eaf6,
    100: #c5cae9,
    200: #9fa8da,
    300: #7986cb,
    400: #5c6bc0,
    500: #3f51b5,
    600: #3949ab,
    700: #303f9f,
    800: #283593,
    900: #1a237e,
  ),
  "blue": (
    50: #e3f2fd,
    100: #bbdefb,
    200: #90caf9,
    300: #64b5f6,
    400: #42a5f5,
    500: #2196f3,
    600: #1e88e5,
    700: #1976d2,
    800: #1565c0,
    900: #0d47a1,
  ),
  "light-blue": (
    50: #e1f5fe,
    100: #b3e5fc,
    200: #81d4fa,
    300: #4fc3f7,
    400: #29b6f6,
    500: #03a9f4,
    600: #039be5,
    700: #0288d1,
    800: #0277bd,
    900: #01579b,
  ),
  "cyan": (
    50: #e0f7fa,
    100: #b2ebf2,
    200: #80deea,
    300: #4dd0e1,
    400: #26c6da,
    500: #00bcd4,
    600: #00acc1,
    700: #0097a7,
    800: #00838f,
    900: #006064,
  ),
  "teal": (
    50: #e0f2f1,
    100: #b2dfdb,
    200: #80cbc4,
    300: #4db6ac,
    400: #26a69a,
    500: #009688,
    600: #00897b,
    700: #00796b,
    800: #00695c,
    900: #004d40,
  ),
  "green": (
    50: #e8f5e9,
    100: #c8e6c9,
    200: #a5d6a7,
    300: #81c784,
    400: #66bb6a,
    500: #4caf50,
    600: #43a047,
    700: #388e3c,
    800: #2e7d32,
    900: #1b5e20,
  ),
  "light-green": (
    50: #f1f8e9,
    100: #dcedc8,
    200: #c5e1a5,
    300: #aed581,
    400: #9ccc65,
    500: #8bc34a,
    600: #7cb342,
    700: #689f38,
    800: #558b2f,
    900: #33691e,
  ),
  "lime": (
    50: #f9fbe7,
    100: #f0f4c3,
    200: #e6ee9c,
    300: #dce775,
    400: #d4e157,
    500: #cddc39,
    600: #c0ca33,
    700: #afb42b,
    800: #9e9d24,
    900: #827717,
  ),
  "yellow": (
    50: #fffde7,
    100: #fff9c4,
    200: #fff59d,
    300: #fff176,
    400: #ffee58,
    500: #ffeb3b,
    600: #fdd835,
    700: #fbc02d,
    800: #f9a825,
    900: #f57f17,
  ),
  "amber": (
    50: #fff8e1,
    100: #ffecb3,
    200: #ffe082,
    300: #ffd54f,
    400: #ffca28,
    500: #ffc107,
    600: #ffb300,
    700: #ffa000,
    800: #ff8f00,
    900: #ff6f00,
  ),
  "orange": (
    50: #fff3e0,
    100: #ffe0b2,
    200: #ffcc80,
    300: #ffb74d,
    400: #ffa726,
    500: #ff9800,
    600: #fb8c00,
    700: #f57c00,
    800: #ef6c00,
    900: #e65100,
  ),
  "deep-orange": (
    50: #fbe9e7,
    100: #ffccbc,
    200: #ffab91,
    300: #ff8a65,
    400: #ff7043,
    500: #ff5722,
    600: #f4511e,
    700: #e64a19,
    800: #d84315,
    900: #bf360c,
  ),
  "brown": (
    50: #efebe9,
    100: #d7ccc8,
    200: #bcaaa4,
    300: #a1887f,
    400: #8d6e63,
    500: #795548,
    600: #6d4c41,
    700: #5d4037,
    800: #4e342e,
    900: #3e2723,
  ),
  "blue-gray": (
    50: #eceff1,
    100: #cfd8dc,
    200: #b0bec5,
    300: #90a4ae,
    400: #78909c,
    500: #607d8b,
    600: #546e7a,
    700: #455a64,
    800: #37474f,
    900: #263238,
  ),
);

@function color($color, $tint) {
  $map: map-get($colors, $color);
  @if $map {
    @return map-get($map, $tint);
  } @else {
    @return "";
  }
}

// C.2. Font Families
$families: (
  "arial": #{Arial,
  sans-serif},
  "verdana": #{Verdana,
  sans-serif},
  "times-new-roman": #{"Times New Roman",
  serif},
  "courier-new": #{"Courier New",
  monospace},
  "nunito": #{Nunito,
  sans-serif},
);

@function family($family) {
  $value: map-get($families, $family);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.3. Font Sizes
$sizes: (
  base: 16px,
  100: 0.6rem,
  200: 0.8rem,
  300: 0.9rem,
  400: 1rem,
  500: 1.2rem,
  600: 1.5rem,
  700: 2rem,
  800: 2.5rem,
  900: 3.5rem,
);

@function size($size) {
  $value: map-get($sizes, $size);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.4. Font Weights
$weights: (
  "thin": 100,
  "extra-light": 200,
  "light": 300,
  "regular": 400,
  "medium": 500,
  "semibold": 600,
  "bold": 700,
  "extra-bold": 800,
  "black": 900,
);

@function weight($weight) {
  $value: map-get($weights, $weight);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.5. Font Styles
$styles: (
  "normal": normal,
  "italic": italic,
  "oblique": oblique,
);

@function style($style) {
  $value: map-get($styles, $style);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.6. Spacers
$spacers: (
  "auto": auto,
  0: 0,
  50: 0.25rem,
  100: 0.5rem,
  200: 0.75rem,
  300: 1rem,
  400: 1.5rem,
  500: 2rem,
  600: 3rem,
  700: 4rem,
  800: 5rem,
  900: 6rem,
  1000: 7rem,
);

@function spacer($spacer) {
  $value: map-get($spacers, $spacer);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

@function border-radius($size) {
  $value: map-get($spacers, $size);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.7. Text Decorations
$decorations: (
  "none": none,
  "overline": overline,
  "underline": underline,
  "line-through": line-through,
  "wavy": wavy,
  "dotted": dotted,
  "dashed": dashed,
);

@function deocration($deocration) {
  $value: map-get($deocrations, $deocration);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.8. Text Transforms
$transforms: (
  "none": none,
  "lowercase": lowercase,
  "uppercase": uppercase,
  "caplitalize": capitalize,
);

@function transform($transform) {
  $value: map-get($transforms, $transform);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.9. Text Aligns
$aligns: (
  "left": left,
  "center": center,
  "right": right,
  "justify": justify,
);

@function align($align) {
  $value: map-get($aligns, $align);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.10. Displays
$displays: (
  "none": none,
  "inline": inline,
  "block": block,
  "inline-block": inline-block,
  "flex": flex,
  "inline-flex": inline-flex,
  "grid": grid,
  "inline-grid": inline-grid,
);

@function display($display) {
  $value: map-get($displays, $display);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.10.a. Align Items
$align-items: (
  "start": start,
  "flex-start": flex-start,
  "center": center,
  "end": end,
  "flex-end": flex-end,
  "stretch": stretch,
  "baseline": baseline,
);

@function align-item($align-item) {
  $value: map-get($align-items, $align-item);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.10.b. Justify Contents
$justify-contents: (
  "flex-start": flex-start,
  "center": center,
  "flex-end": flex-end,
  "space-around": space-around,
  "space-between": space-between,
  "space-evenly": space-evenly,
);

@function justify-content($justify-content) {
  $value: map-get($justify-contents, $justify-content);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.10.c. Justify Items
$justify-items: (
  "stretch": stretch,
  "center": center,
  "start": start,
  "end": end,
);

@function justify-item($justify-item) {
  $value: map-get($justify-items, $justify-item);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.11. Box Shadows
$box-shadows: (
  400: #{0.1em 0.1em 0.3em 0 hsla(0, 0%, 0%, 0.2)},
);

@function box-shadow($box-shadow) {
  $value: map-get($box-shadows, $box-shadow);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.12. Letter Spacing
$letter-spacings: (
  "auto": auto,
  50: 0,
  100: 0.03em,
  200: 0.05em,
  300: 0.08em,
  400: 0.1em,
  500: 0.3em,
);

@function letter-spacing($letter-spacing) {
  $value: map-get($letter-spacings, $letter-spacing);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.13. Positions
$positions: (
  "static": static,
  "relative": relative,
  "absolute": absolute,
  "sticky": sticky,
);

@function position($position) {
  $value: map-get($positions, $position);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}

// C.14. Line Heights
$line-heights: (
  "normal": normal,
  0: 0,
  100: 0.9em,
  200: 1.2em,
);

@function line-height($line-height) {
  $value: map-get($line-heights, $line-height);
  @if $value {
    @return $value;
  } @else {
    @return "";
  }
}
